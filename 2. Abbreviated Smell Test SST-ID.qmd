---
title: "Abbreviated Smell Test - SST-ID"
author: "Juan Li"
date: 2024-03-01
format: pptx
editor: visual
---

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

library(dplyr)      # Data manipulation
library(tidyr)      # Data manipulation: pivot_
library(stringr)    # String manipulation
library(ggplot2)    # Data visualization
library(ggpubr)     # Combine multiple ggplot2 panels - ggarrange
library(pROC)       # ROC, AUC

source("R/itemAUC.R", echo=TRUE)   # Ranking individual scents based on their AUC values - with cross validation
source("R/subsetAUC.R", echo=TRUE) # Subset AUC values - with cross validation
```

## DeNoPa Characteristics

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

df_D <- read.csv("DeNoPa_cut.csv", header = TRUE)
group_name <- c("HC", "PD/DLB", "MSA/PSP")
df_D$group <- factor(df_D$group, levels = group_name)
df_D$olfaction <- factor(df_D$olfaction, levels = c("Normal", "Reduced"))

group.colors <- c("#1F78B4",  "#AF026C")
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| 
# Slice the data - only focus on HC and PD from now on
# save all the data
data_all <- df_D

# Remove OND in DeNoPa
data <- data_all %>% filter(group %in% group_name[1:2], nMissing < 16) %>% droplevels()
```

## Item/scent ranking

Rank the SST-ID questions using baseline DeNoPa data, with 10-fold cross validation (CV).

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

n <- 16

# Item labels
itemLab <- c("01-Orange",
             "02-Leather",
             "03-Cinnamon",
             "04-Mint",
             "05-Banana",
             "06-Lemon",
             "07-Licorice",
             "08-Turpentine",
             "09-Garlic",
             "10-Coffee",
             "11-Apple",
             "12-Clove",
             "13-Pineapple",
             "14-Rose",
             "15-Anise",
             "16-Fish")
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

df_BL <- data %>% 
  filter(EVENT_ID == "baseline") %>% 
  select(ID, contains(".B"), contains("U_"),SST.ID, group) 
itmvec <- names(df_BL)[grepl("SS.ID", names(df_BL))]

resList <- itemAUC(df_BL$group, df_BL %>% select(all_of(itmvec)), 
                   nfold = 10, seed = 10, group_name = group_name[1:2], item_label = itemLab)

itmAUC <- resList$itmAUC
df_D_ave <- resList$df_ave
item_rank <- resList$rankList[[1]]
scent_rank <- unlist(str_split(item_rank, "-"))[seq(2,32, by = 2)]
```

```{r}
#| echo: false
#| warning: false
#| message: false

dfPlt <- itmAUC
df_rank <- data.frame(item = item_rank,
                      rank_ave = 1:n)
dfPlt <- dfPlt %>% left_join(df_rank, by = "item")
dfPlt$item <- factor(dfPlt$item, levels = item_rank)
levels(dfPlt$item) <- scent_rank

scent_shared <- c("Orange", "Turpentine", "Lemon", "Leather", "Cinnamon", "Pineapple",
                  "Clove", "Rose", "Banana", "Mint", "Licorice")
scent_face <- rep("plain", n)
scent_face[which(scent_rank %in% scent_shared)] <- "bold.italic"

pFigure_3a <- ggplot(dfPlt, aes(item, auc, fill = rank_ave, color = rank_ave)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), alpha = 0.5)+
  viridis::scale_fill_viridis(option = "C", direction = -1, begin = 0, end = 0.8)+
  viridis::scale_color_viridis(option = "C", direction = -1, begin = 0, end = 0.8)+
  ylim(0.5, 0.8) +
  coord_flip()+
  labs(y = "Single-scent AUC across 10 folds")+
  theme_bw()+
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        text = element_text(size = 12),
        axis.text.y=
          element_text(face= scent_face))
```

Proportion of answer right in each group

```{r}
#| echo: false
#| warning: false
#| message: false

df <- data.frame(group = group_name[1:2])
for (i in 1:n) {
  if (i < 10) {
    col <- paste0("SS.ID.0",i, ".B")
  } else {
    col <- paste0("SS.ID.",i, ".B")
  }
  
  dfi <- data %>% filter(EVENT_ID == "baseline") %>% 
    select(group, all_of(col)) 
  names(dfi)[2] <- "col"
  
  dfi <- dfi %>% 
    group_by(group) %>% 
    summarise(n = n(),
              new = sum(col)) %>% 
    mutate(new2 = round(new/n*100,2))
  names(dfi)[which(names(dfi) == "new2")] <- itemLab[i]
  df <- left_join(df, dfi %>% select(-c(n,new)), by = "group")
}

df_long <- df %>% pivot_longer(-group, names_to = "item", values_to = "prop") 

df_long <- df_long %>% 
  mutate(prop2 = ifelse(group != group_name[2], -prop, prop))
df_long$group <- factor(df_long$group, levels = group_name)
df_long$item <- factor(df_long$item, levels = item_rank)
levels(df_long$item) <- scent_rank
```

### Figure 3 (a), (b)

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 9
#| fig-height: 3

df_long$group <- factor(df_long$group, levels = group_name[1:2])
p1 <- ggplot(df_long, aes(item, prop2, fill = group))+
  geom_col(position = "identity", width = 0.5, alpha = 0.8) +
  scale_fill_manual(values = group.colors)+
  labs(y = "% of correct scent identification")+
  coord_flip()+
  scale_y_continuous(limits = c(-100,100), breaks = c(-100, -50, 0, 50, 100), labels = c(100, 50, 0, 50, 100))+
  theme_bw() +
  theme(legend.position = c(0.87, 0.85),
        legend.title = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        text = element_text(size=11))

print(ggarrange(pFigure_3a, p1, ncol = 2, widths = c(1, 0.8)))
```

### Supplemental Figure 2 (a)

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 9
#| fig-height: 3

df_D_diff <- as_tibble(t(df[,-1]))
names(df_D_diff) <- group_name[1:2]
df_D_diff <- as.data.frame(df_D_diff) 
names(df_D_diff) <- c("HC", "PD")
df_D_diff <- df_D_diff%>% 
  mutate(diff = HC - PD)
df_D_diff$item <- itemLab
df_D_diff$item <- factor(df_D_diff$item, levels = item_rank)
levels(df_D_diff$item) <- scent_rank
p2 <- ggplot(df_D_diff, aes(item, diff, fill = as.numeric(item)))+
  geom_col(width = 0.5, alpha = 0.8) +
  viridis::scale_fill_viridis(option = "C", direction = -1, begin = 0, end = 0.8)+
  labs(y = paste0("% ", group_name[1], " - % ", group_name[2])) +
  coord_flip()+
  theme_bw()+
  theme(axis.title.y = element_blank(),
        text = element_text(size=11),
        legend.position = "none")+
  ylim(0, 52) 
print(p2)
```

## Compare with other published item rankings

```{r}
#| echo: false
#| warning: false
#| message: false

rankings <- read.csv("Supportive data/Published rankings.csv", header = TRUE)

# This study
type_vec_Li <- c()
indList_Li<- list()
vec_Li <- as.numeric(gsub("([0-9]+).*$", "\\1", rev(df_D_ave$item)))
for (i in 1:n) {
  ind_top_i <- vec_Li[1:i]
  indList_Li[[i]] <- ind_top_i
  type_vec_Li[i] <- paste("top", i)
}

# Boesveldt ranking
type_vec_Boesveldt <- c()
indList_Boesveldt<- list()
vec_Boesveldt <- rankings$Boesveldt[which(!is.na(rankings$Boesveldt))]
for (i in 1:n) {
  ind_top_i <- vec_Boesveldt[1:i]
  indList_Boesveldt[[i]] <- ind_top_i
  type_vec_Boesveldt[i] <- paste("Boesveldt: top", i)
}

# Casjens ranking
type_vec_Casjens <- c()
indList_Casjens<- list()
vec_Casjens <- rankings$Casjens[which(!is.na(rankings$Casjens))]
for (i in 1:n) {
  ind_top_i <- vec_Casjens[1:i]
  indList_Casjens[[i]] <- ind_top_i
  type_vec_Casjens[i] <- paste("Casjens: top", i)
}

# Lo ranking
type_vec_Lo <- c()
indList_Lo<- list()
vec_Lo <- rankings$Lo[which(!is.na(rankings$Lo))]
for (i in 1:n) {
  ind_top_i <- vec_Lo[1:i]
  indList_Lo[[i]] <- ind_top_i
  type_vec_Lo[i] <- paste("Lo: top", i)
}

# Mahlknecht ranking
type_vec_Mahlknecht <- c()
indList_Mahlknecht<- list()
vec_Mahlknecht <- rankings$Mahlknecht[which(!is.na(rankings$Mahlknecht))]
for (i in 1:12) {
  ind_top_i <- vec_Mahlknecht[1:i]
  indList_Mahlknecht[[i]] <- ind_top_i
  type_vec_Mahlknecht[i] <- paste("Mahlknecht: top", i)
}

# combine all
type_vec1 <- c(type_vec_Li, type_vec_Boesveldt, type_vec_Casjens, type_vec_Lo, type_vec_Mahlknecht)
indList1 <- c(indList_Li, indList_Boesveldt, indList_Casjens, indList_Lo, indList_Mahlknecht)
author_vec1 <- c(rep("This study", 16), 
                 rep("Boesveldt", 16), rep("Casjens", 16), rep("Lo", 16), rep("Mahlknecht", 12))
author_order1 <- c("This study",
                   "Boesveldt","Casjens","Lo","Mahlknecht")
```

### Figure 4 (a)

```{r}
#| echo: false
#| warning: false
#| message: false

rank_comp <- data.frame(item = c(itemLab[vec_Li],
                                 itemLab[vec_Boesveldt],
                                 itemLab[vec_Casjens],
                                 itemLab[vec_Lo],
                                 itemLab[vec_Mahlknecht]),
                        rank = c(rep(seq(16,1,by=-1),4), seq(16,5,by=-1)),
                        author = author_vec1)
rank_comp$item <- factor(rank_comp$item, levels = item_rank)
rank_comp$item_ind <- as.numeric(gsub("([0-9]+).*$", "\\1", rank_comp$item))

rank_ave <- rank_comp %>% group_by(item) %>% summarise(mean = mean(rank)) %>% arrange(mean)
rank_ave$item_ind <- as.numeric(gsub("([0-9]+).*$", "\\1", rank_ave$item))
rank_ave$author <- rep("Average", nrow(rank_ave))
rank_ave$rank <- 1:16
rank_ave_long <- rank_ave %>% pivot_longer(-c(item, item_ind, author), names_to = "type", values_to = "rank") %>%
  mutate(author = ifelse(type == "mean", "Average-mean", "Average-rank"))

rank_comp <- bind_rows(rank_ave, rank_comp)
rank_comp$author <- factor(rank_comp$author, levels = c("Average", author_order1))

top_5_A<- as.vector(head(rev(rank_ave$item),7))
bottom_5_A <- as.vector(tail(rev(rank_ave$item),5))

temp <- rank_ave %>% select(item, rank)
names(temp)[2] <- "rank_ave"
temp$item <- as.character(temp$item)
rank_comp <- rank_comp %>% left_join(temp, by = "item")

rank_comp$item_ind[rank_comp$author == "Average"] <- rank_comp$item[rank_comp$author == "Average"]
rank_comp$author2 <- as.numeric(rank_comp$author)
rank_comp$author2[rank_comp$author2 == 1] <- 1.3

ggplot(rank_comp, 
       aes(author, rank, color = rank_ave, group = item, label = item_ind))+
  geom_text()+
  geom_line(aes(author2, rank, color = rank_ave), linetype = "dashed", size = 0.1)+
  geom_text(data = rank_comp %>% filter(item %in% top_5_A),
            aes(author, rank, color = rank_ave, group = item, label = item_ind))+
  geom_line(data = rank_comp %>% filter(item %in% top_5_A),
            aes(author2, rank, color = rank_ave, group = item, label = item_ind), size = 0.2)+
  viridis::scale_color_viridis(option = "C", direction = -1, begin = 0, end = 0.8)+
  #scale_color_continuous(low = "blue", high = "red")+
  theme_bw()+
  theme(legend.position =  "none",
        text = element_text(size=14),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x=
          element_text(face= c("bold", "bold.italic", rep("plain", 4))))+
  labs(y = "Rank")

# Save the rankings
write.csv(rank_comp, "Generated files/SST_ID_rankings.csv", row.names = FALSE)
```

## Subset AUC

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

type_vec_Average <- c()
indList_Average<- list()
vec_Average <- rev(as.numeric(rank_ave$item_ind))
for (i in 1:n) {
  ind_top_i <- vec_Average[1:i]
  indList_Average[[i]] <- ind_top_i
  type_vec_Average[i] <- paste("Average: top", i)
}

# add the shared ones
df_shared <- read.csv("Supportive data/scent_shared.csv", header = TRUE)
type_vec_Shared <- c()
indList_Shared<- list()
vec_Shared <- as.numeric(df_shared$ind_SST_ID)
for (i in 1:length(vec_Shared)) {
  ind_top_i <- vec_Shared[1:i]
  indList_Shared[[i]] <- ind_top_i
  type_vec_Shared[i] <- paste("Shared: top", i)
}

# combine all
type_vec <- c(vec_Shared, type_vec_Average, type_vec1)
indList <- c(indList_Shared, indList_Average, indList1)
author_vec <- c(rep("Shared", 11), rep("Average", 16), author_vec1)
author_order <- c("Shared", "Average",author_order1)
#c("#1F78B4", "#E31A1C", "#A6CEE3", "darkred", "#B2DF8A", "#33A02C", "#FB9A99", "#FDBF6F")
author_cols <- c("red", "gray28", "#FF7F00", "#A6CEE3","purple","forestgreen", "brown")

# number of distinct subset
indList_ordered <- indList
for (i in 1:length(indList)) {
  indList_ordered[[i]] <- indList[[i]][order(indList[[i]])]
}
length(unique(indList_ordered))
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 10
#| fig-height: 6

# development
result_dev <- subsetAUC(df_BL$group, df_BL %>% select(all_of(itmvec)), indList, 
                        nfold = 10, seed = 10,
                        group_name = group_name[1:2], ind_subset = NULL,
                        type_vec = type_vec, 
                        rank_vec = author_vec, rank_order = author_order, rank_cols = author_cols,
                        level1 = author_order[1:2], level2 = author_order[3],
                        titlestr = "Baseline: train with 10-fold CV",
                        legend.posistion = c(0.7, 0.3),
                        ymin = 0.6, ymax = 0.95, new_line = 0.9,
                        ylab = "Mean sub-test AUC value over 10 folds",
                        xlab = "Number of SST-ID scents in each subset")

# validation
result_val <- subsetAUC(df_BL$group, df_BL %>% select(all_of(itmvec)), indList, 
                        nfold = 10, seed = 10, is_train = FALSE,
                        group_name = group_name[1:2], ind_subset = NULL,
                        type_vec = type_vec, 
                        rank_vec = author_vec, rank_order = author_order, rank_cols = author_cols,
                        level1 = author_order[1:2], level2 = author_order[3],
                        titlestr = "Internal validation: DeNoPa baseline with 10-fold CV", ci = FALSE,
                        legend.posistion = c(0.7, 0.3),
                        ymin = 0.6, ymax = 0.95, new_line = 0.9,
                        ylab = "Mean sub-test AUC value over 10 folds",
                        xlab = "Number of SST-ID scents in each subset")
```

### Figure 6 (a)-(c)

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 16
#| fig-height: 5

# 48 FU
df_valid_48 <- data %>% 
  filter(EVENT_ID == "48FU", group %in% group_name[1:2]) %>% 
  select(ID, EVENT_ID, contains(".B"), contains("U_"),SST.ID, group) 

result_val_48 <- subsetAUC(df_valid_48$group, df_valid_48 %>% select(all_of(itmvec)), indList, 
                           group_name = group_name[1:2], ind_subset = NULL,
                           type_vec = type_vec, 
                           rank_vec = author_vec, 
                           rank_order = author_order, rank_cols = author_cols,
                           level1 = author_order[1:2], level2 = author_order[3],
                           titlestr = "Semi-external validation: DeNoPa 48-month follow-up", ci = FALSE,
                           legend.posistion = "none",
                           ymin = 0.6, ymax = 0.95, new_line = 0.9,
                           ylab = "Sub-test AUC value",
                           xlab = "Number of SST-ID scents in each subset")

# 72 FU
df_valid_72 <- data %>% 
  filter(EVENT_ID == "72FU", group %in% group_name[1:2]) %>% 
  select(ID, EVENT_ID, contains(".B"), contains("U_"),SST.ID, group) 

result_val_72 <- subsetAUC(df_valid_72$group, df_valid_72 %>% select(all_of(itmvec)), indList, 
                           group_name = group_name[1:2], ind_subset = NULL,
                           type_vec = type_vec, 
                           rank_vec = author_vec, 
                           rank_order = author_order, rank_cols = author_cols,
                           level1 = author_order[1:2], level2 = author_order[3],
                           titlestr = "Semi-external validation: DeNoPa 72-month follow-up", ci = FALSE,
                           legend.posistion = "none",
                           ymin = 0.6, ymax = 0.95, new_line = 0.9,
                           ylab = "Sub-test AUC value",
                           xlab = "Number of SST-ID scents in each subset")

p1 <- result_val$p
p2 <- result_val_48$p
p3 <- result_val_72$p #+theme(plot.title = element_text(hjust = 0.2))
ggarrange(p1, p2, p3, ncol = 3)
```

## Item Characteristic Curve (ICC)

```{r}
#| echo: false
#| warning: false
#| message: false
#| output: false

library(TestGardener)
source("R/make.dataList.R", echo=TRUE)
source("R/Wbinsmth.R", echo=TRUE)
source("R/eval_surp.R", echo=TRUE)
source("R/ICC.plot.R", echo=TRUE)
```

```{r}
#| echo: false
#| warning: false
#| message: false

n <- 16
key <- rep(0,n)
for (i in 1:n) {
  if (i < 10) {
    col <- paste("SS.ID.0",i,".M", sep="")
  } else {
    col <- paste("SS.ID.",i,".M", sep="")
  }
  
  temp <- unlist(as.vector(unique(data %>% filter(EVENT_ID == "baseline") %>% select(all_of(col)))))
  
  key[i] <- setdiff(c(1:4), temp)[1]
}
```

```{r}
#| echo: false
#| warning: false
#| message: false

for (i in 1:n) {
  if (i < 10) {
    col_B <- paste("SS.ID.0",i,".B", sep="")
    col_M <- paste("SS.ID.0",i,".M", sep="")
    str <- "U_0"
  } else {
    col_B <- paste("SS.ID.",i,".B", sep="")
    col_M <- paste("SS.ID.",i,".M", sep="")
    str <- "U_"
  }
  
  key_i <- key[i]
  vec_B <- unname(unlist(data[col_B]))
  vec_M <- unname(unlist(data[col_M]))
  vec <- ifelse(vec_B == 1, key_i, vec_M)
  
  data$new <- vec
  
  names(data)[ncol(data)] <- paste(str,i,sep="")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false

noption <- rep(4, n)
ScoreList <- list() # option scores
for (item in 1:n){
  scorei <- rep(0,noption[item])
  scorei[key[item]] <- 1
  ScoreList[[item]] <- scorei
}
```

```{r}
#| echo: false
#| warning: false
#| message: false

vec <- unlist(strsplit(itemLab, "-"))
itemLab2 <- vec[seq(2, length(vec), by = 2)]

optionLabels <- as.matrix(read.csv("Supportive data/SST_ID_option.csv",header = F, check.names=FALSE))
labelList <- list() # list of just option labels
for (item in 1:n){
  #labelList[[item]] <- c(optionLabels[item,1:4], "5-missing")
  labelList[[item]] <- optionLabels[item,1:4]
}
optList <- list(itemLab=itemLab2, optLab=labelList, optScr=ScoreList)
```

```{r}
#| echo: false
#| warning: false
#| message: false

U_PD <- unname(as.matrix(data %>% 
                           filter(EVENT_ID == "baseline", group == "PD/DLB") %>% 
                           dplyr::select(U_01:U_16)))
nMissing <- rowSums(is.na(U_PD)) 
U_PD <- U_PD[nMissing == 0, ]
```

```{r}
#| echo: false
#| warning: false
#| message: false

U_HC <- unname(as.matrix(data %>% 
                           filter(EVENT_ID == "baseline", group == "HC") %>% 
                           dplyr::select(U_01:U_16)))
nMissing <- rowSums(is.na(U_HC)) 
U_HC <- U_HC[nMissing == 0, ]
```

```{r}
#| echo: false
#| warning: false
#| message: false

set.seed(100)
PD_dataList <- make.dataList(U_PD, key, optList, order = 2)

set.seed(100)
HC_dataList <- make.dataList(U_HC, key, optList, order = 2)
```

```{r}
#| echo: false
#| warning: false
#| message: false

theta_PD    <- PD_dataList$percntrnk
thetaQnt_PD  <- PD_dataList$thetaQnt
WfdResult_PD <- Wbinsmth(theta_PD, PD_dataList)
theta0_PD <- theta_PD

WfdList_PD <- WfdResult_PD$WfdList
binctr_PD  <- WfdResult_PD$aves
```

```{r}
#| echo: false
#| warning: false
#| message: false

theta_HC     <- HC_dataList$percntrnk
thetaQnt_HC  <- HC_dataList$thetaQnt
WfdResult_HC <- Wbinsmth(theta_HC, HC_dataList)
theta0_HC    <- theta_HC

WfdList_HC <- WfdResult_HC$WfdList
binctr_HC  <- WfdResult_HC$aves
```

### Figure 5, Supplemental Figure 3, Supplemental Figure 4

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 7
#| fig-height: 4

indfine <- seq(0,100,len=101)
Qvec    <- c(5,25,50,75,95)

ind <- as.numeric(rank_comp$item_ind[rank_comp$author == "This study"])
for (i in ind) {
  p1 <- ICC.plot(indfine, WfdList_PD, PD_dataList, Qvec, binctr_PD, plotType = "P",
                 data_point = FALSE, plotindex = i, titlestr = "PD/DLB", 
                 lgdlab=14, axisttl = 14, axistxt = 14)[[1]]
  p2 <- ICC.plot(indfine, WfdList_HC, HC_dataList, Qvec, binctr_HC, plotType = "P",
                 data_point = FALSE, plotindex = i, titlestr = "HC", ylab = "", 
                 lgdlab=14, axisttl = 14, axistxt = 14)[[1]]
  
  print(ggarrange(p1, p2, ncol=2, common.legend = TRUE, legend = "bottom"))
}
```

## % correct by sex

```{r}
#| echo: false
#| warning: false
#| message: false

df_M <- data %>% filter(EVENT_ID == "baseline", sex == "Male") %>% 
  select(group, SS.ID.01.B:SS.ID.16.B) %>% 
  group_by(group) %>% 
  summarise(n = n(),
            nright.01 = sum(SS.ID.01.B),
            nright.02 = sum(SS.ID.02.B),
            nright.03 = sum(SS.ID.03.B),
            nright.04 = sum(SS.ID.04.B),
            nright.05 = sum(SS.ID.05.B),
            nright.06 = sum(SS.ID.06.B),
            nright.07 = sum(SS.ID.07.B),
            nright.08 = sum(SS.ID.08.B),
            nright.09 = sum(SS.ID.09.B),
            nright.10 = sum(SS.ID.10.B),
            nright.11 = sum(SS.ID.11.B),
            nright.12 = sum(SS.ID.12.B),
            nright.13 = sum(SS.ID.13.B),
            nright.14 = sum(SS.ID.14.B),
            nright.15 = sum(SS.ID.15.B),
            nright.16 = sum(SS.ID.16.B)) %>% 
  mutate(pright.01 = round(nright.01/n*100,2),
         pright.02 = round(nright.02/n*100,2),
         pright.03 = round(nright.03/n*100,2),
         pright.04 = round(nright.04/n*100,2),
         pright.05 = round(nright.05/n*100,2),
         pright.06 = round(nright.06/n*100,2),
         pright.07 = round(nright.07/n*100,2),
         pright.08 = round(nright.08/n*100,2),
         pright.09 = round(nright.09/n*100,2),
         pright.10 = round(nright.10/n*100,2),
         pright.11 = round(nright.11/n*100,2),
         pright.12 = round(nright.12/n*100,2),
         pright.13 = round(nright.13/n*100,2),
         pright.14 = round(nright.14/n*100,2),
         pright.15 = round(nright.15/n*100,2),
         pright.16 = round(nright.16/n*100,2))

df_M <- df_M %>% select(group, pright.01:pright.16)
names(df_M)[2:17] <- itemLab

df_long_M <- df_M %>% pivot_longer(-group, names_to = "item", values_to = "prop") 
df_long_M$group <- factor(df_long_M$group, levels = group_name[1:2])

df_long_M <- df_long_M %>% 
  mutate(prop2 = ifelse(group == "HC", -prop, prop),
         sex = "Male")
df_long_M$item <- factor(df_long_M$item, levels = item_rank)
levels(df_long_M$item) <- scent_rank

saveRDS(df_long_M, "Generated files/df_sex_D_M.rds")
```

```{r}
#| echo: false
#| warning: false
#| message: false

df_F <- data %>% filter(EVENT_ID == "baseline", sex == "Female") %>% 
  select(group, SS.ID.01.B:SS.ID.16.B) %>% 
  group_by(group) %>% 
  summarise(n = n(),
            nright.01 = sum(SS.ID.01.B),
            nright.02 = sum(SS.ID.02.B),
            nright.03 = sum(SS.ID.03.B),
            nright.04 = sum(SS.ID.04.B),
            nright.05 = sum(SS.ID.05.B),
            nright.06 = sum(SS.ID.06.B),
            nright.07 = sum(SS.ID.07.B),
            nright.08 = sum(SS.ID.08.B),
            nright.09 = sum(SS.ID.09.B),
            nright.10 = sum(SS.ID.10.B),
            nright.11 = sum(SS.ID.11.B),
            nright.12 = sum(SS.ID.12.B),
            nright.13 = sum(SS.ID.13.B),
            nright.14 = sum(SS.ID.14.B),
            nright.15 = sum(SS.ID.15.B),
            nright.16 = sum(SS.ID.16.B)) %>% 
  mutate(pright.01 = round(nright.01/n*100,2),
         pright.02 = round(nright.02/n*100,2),
         pright.03 = round(nright.03/n*100,2),
         pright.04 = round(nright.04/n*100,2),
         pright.05 = round(nright.05/n*100,2),
         pright.06 = round(nright.06/n*100,2),
         pright.07 = round(nright.07/n*100,2),
         pright.08 = round(nright.08/n*100,2),
         pright.09 = round(nright.09/n*100,2),
         pright.10 = round(nright.10/n*100,2),
         pright.11 = round(nright.11/n*100,2),
         pright.12 = round(nright.12/n*100,2),
         pright.13 = round(nright.13/n*100,2),
         pright.14 = round(nright.14/n*100,2),
         pright.15 = round(nright.15/n*100,2),
         pright.16 = round(nright.16/n*100,2))

df_F <- df_F %>% select(group, pright.01:pright.16)
names(df_F)[2:17] <- itemLab

df_long_F <- df_F %>% pivot_longer(-group, names_to = "item", values_to = "prop") 
df_long_F$group <- factor(df_long_F$group, levels = group_name[1:2])

df_long_F <- df_long_F %>% 
  mutate(prop2 = ifelse(group == "HC", -prop, prop),
         sex = "Female")
df_long_F$item <- factor(df_long_F$item, levels = item_rank)
levels(df_long_F$item) <- scent_rank

saveRDS(df_long_F, "Generated files/df_sex_D_F.rds")
```

```{r}
#| echo: false
#| warning: false
#| message: false

df_M_diff <- as_tibble(t(df_M[1:2,-1]))
names(df_M_diff) <- group_name[1:2]
df_M_diff <- as.data.frame(df_M_diff) %>% 
  mutate(diff = HC-`PD/DLB`) 
df_M_diff$item <- itemLab
df_M_diff$item <- factor(df_M_diff$item, levels = item_rank)
levels(df_M_diff$item) <- scent_rank
df_M_diff$sex <- rep("Male", nrow(df_M_diff))


df_F_diff <- as_tibble(t(df_F[1:2,-1]))
names(df_F_diff) <- group_name[1:2]
df_F_diff <- as.data.frame(df_F_diff) %>% 
  mutate(diff = HC-`PD/DLB`) 
df_F_diff$item <- itemLab
df_F_diff$item <- factor(df_F_diff$item, levels = item_rank)
levels(df_F_diff$item) <- scent_rank
df_F_diff$sex <- rep("Female", nrow(df_F_diff))

dfPlt <- bind_rows(df_F_diff, df_M_diff)
dfPlt <- dfPlt %>% 
  mutate(diff = ifelse(sex == "Female", -diff, diff))

saveRDS(dfPlt, "Generated files/df_sex_D.rds")
```

## % correct by age

```{r}
#| echo: false
#| warning: false
#| message: false

df_D_BL <- data %>% filter(EVENT_ID == "baseline")
Qvec <- quantile(df_D_BL$age) # 40   59   66   71   85 

df_D_BL <- df_D_BL %>% 
  mutate(age_cat = case_when(
    age <= Qvec[2] ~ "bin1",
    age <= Qvec[3] ~ "bin2",
    age <= Qvec[4] ~ "bin3",
    TRUE ~ "bin4"
  ))
bin_vec <- c("bin1","bin2","bin3","bin4")

df_long_Age <- data.frame()
for (i in 1:4) {
  df_age <- df_D_BL %>% filter(age_cat == bin_vec[i]) %>% 
    select(group, SS.ID.01.B:SS.ID.16.B) %>% 
    group_by(group) %>% 
    summarise(n = n(),
              nright.01 = sum(SS.ID.01.B),
              nright.02 = sum(SS.ID.02.B),
              nright.03 = sum(SS.ID.03.B),
              nright.04 = sum(SS.ID.04.B),
              nright.05 = sum(SS.ID.05.B),
              nright.06 = sum(SS.ID.06.B),
              nright.07 = sum(SS.ID.07.B),
              nright.08 = sum(SS.ID.08.B),
              nright.09 = sum(SS.ID.09.B),
              nright.10 = sum(SS.ID.10.B),
              nright.11 = sum(SS.ID.11.B),
              nright.12 = sum(SS.ID.12.B),
              nright.13 = sum(SS.ID.13.B),
              nright.14 = sum(SS.ID.14.B),
              nright.15 = sum(SS.ID.15.B),
              nright.16 = sum(SS.ID.16.B)) %>% 
    mutate(pright.01 = round(nright.01/n*100,2),
           pright.02 = round(nright.02/n*100,2),
           pright.03 = round(nright.03/n*100,2),
           pright.04 = round(nright.04/n*100,2),
           pright.05 = round(nright.05/n*100,2),
           pright.06 = round(nright.06/n*100,2),
           pright.07 = round(nright.07/n*100,2),
           pright.08 = round(nright.08/n*100,2),
           pright.09 = round(nright.09/n*100,2),
           pright.10 = round(nright.10/n*100,2),
           pright.11 = round(nright.11/n*100,2),
           pright.12 = round(nright.12/n*100,2),
           pright.13 = round(nright.13/n*100,2),
           pright.14 = round(nright.14/n*100,2),
           pright.15 = round(nright.15/n*100,2),
           pright.16 = round(nright.16/n*100,2))
  
  df_age <- df_age %>% select(group, pright.01:pright.16)
  names(df_age)[2:17] <- itemLab
  
  df_long_age <- df_age %>% pivot_longer(-group, names_to = "item", values_to = "prop") 
  df_long_age$group <- factor(df_long_age$group, levels = group_name[1:2])
  
  df_long_age <- df_long_age %>% 
    mutate(age = round((Qvec[i]+Qvec[i+1])/2))
  
  df_long_Age <- bind_rows(df_long_Age, df_long_age)
}

Wnbasis <- 2
Wnorder <- min(Wnbasis, 5)
Wbasis  <- fda::create.bspline.basis(c(40, 85), Wnbasis, Wnorder) 
WfdPar  <- fda::fdPar(Wbasis)

nfine <- 101
agefine <- seq(40,85, length = nfine)
binctr <- c(50,62,68,77)

df_fine <- data.frame()
for (i in 1:n) {
  df_W <- df_long_Age %>% filter(item == item_rank[i]) %>% pivot_wider(names_from = group, values_from = prop)
  bin <- as.matrix(df_W[,3:4])
  
  result  <- fda::smooth.basis(binctr, bin, WfdPar)
  Wfdi    <- result$fd
  Wmatfine   <- fda::eval.fd(agefine, Wfdi)
  
  dfi <- data.frame(group = c(rep("HC", nfine), rep("PD/DLB", nfine)),
                    age = rep(agefine, 2),
                    prop = c(Wmatfine[,1], Wmatfine[,2]),
                    item = rep(item_rank[i], nfine*2))
  
  df_fine <- bind_rows(df_fine, dfi)
}

df_fine$item <- factor(df_fine$item, levels = rev(item_rank))
levels(df_fine$item) <- rev(scent_rank)
df_long_Age$item <- factor(df_long_Age$item, levels = rev(item_rank))
levels(df_long_Age$item) <- rev(scent_rank)

saveRDS(df_fine, "Generated files/df_fine_D.rds")
saveRDS(df_long_Age, "Generated files/df_age_D.rds")
```

```{r}

```
